import time
import datetime

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
#Dasturchi @Mrgayratov kanla @Kingsofpy
from filters import IsSuperAdmin
from keyboards.inline.main_menu_super_admin import main_menu_for_super_admin, back_to_main_menu
from loader import dp, db, bot
from states.admin_state import SuperAdminState

# ADMIN TAYORLASH VA CHIQARISH QISMI UCHUN
@dp.callback_query_handler(IsSuperAdmin(), text="add_admin", state="*")
async def add_admin(call: types.CallbackQuery):
    await call.answer(cache_time=1)
    await call.message.edit_text("Yangi adminni chat IDsini yuboring...\n"
                                 "üÜî –ü–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ @userinfobot —ñ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏ /start, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ–π–Ω–∏–π –Ω–æ–º–µ—Ä –ê–î–ú",
                                 reply_markup=back_to_main_menu)
    await SuperAdminState.SUPER_ADMIN_ADD_ADMIN.set()

@dp.message_handler(IsSuperAdmin(), state=SuperAdminState.SUPER_ADMIN_ADD_ADMIN)
async def add_admin_method(message: types.Message, state: FSMContext):
    admin_id =message.text
    await state.update_data({"admin_id": admin_id})
    await message.answer("üë®üèª‚Äçüíª –ù–∞–¥—ñ—à–ª—ñ—Ç—å –Ω–æ–≤–µ —ñ–º'—è –ê–î–ú",
                                 reply_markup=back_to_main_menu)
    await SuperAdminState.SUPER_ADMIN_ADD_FULLNAME.set()
#Dasturchi @Mrgayratov kanla @Kingsofpy
@dp.message_handler(IsSuperAdmin(), state=SuperAdminState.SUPER_ADMIN_ADD_FULLNAME)
async def add_admin_method(message: types.Message,state: FSMContext):
    try:
        full_name = message.text
        await state.update_data({"full_name": full_name})
        malumot = await state.get_data()
        # Dasturchi @Mrgayratov kanla @Kingsofpy
        adminid = malumot.get("admin_id")
        full_name = malumot.get("full_name")

        try:
            db.add_admin(user_id=adminid,
                         full_name=full_name)
        except:
            pass
        await bot.send_message(chat_id=adminid,text="–í—ñ—Ç–∞—î–º–æ, –≤–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –Ω–∞—à–æ–º—É –±–æ—Ç—ñ, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å /start")
        await message.answer("‚úÖ –ù–æ–≤–æ–≥–æ –ê–î–ú —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!", reply_markup=main_menu_for_super_admin)
        await state.finish()
    except Exception as e:
        print(e)
        await message.answer("‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞!", reply_markup=main_menu_for_super_admin)
        await state.finish()

@dp.callback_query_handler(IsSuperAdmin(), text="del_admin", state="*")
async def show_admins(call: types.CallbackQuery):
    print(call.data)
    await call.answer(cache_time=2)
    admins = db.select_all_admins()
    buttons = InlineKeyboardMarkup(row_width=1)
    for admin in admins:
        buttons.insert(InlineKeyboardButton(text=f"{admin[2]}", callback_data=f"admin:{admin[1]}"))
    # Dasturchi @Mrgayratov kanla @Kingsofpy
    buttons.add(InlineKeyboardButton(text="‚ûï –î–æ–¥–∞—Ç–∏ –ê–î–ú", callback_data="add_admin"))
    buttons.insert(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main_menu"))
    await call.message.edit_text(text="üë§ –ê–î–ú", reply_markup=buttons)
#Dasturchi @Mrgayratov kanla @Kingsofpy
@dp.callback_query_handler(IsSuperAdmin(), text_contains="admin:", state="*")
async def del_admin_method(call: types.CallbackQuery):
    await call.answer(cache_time=1)
    data = call.data.rsplit(":")
    admin = db.select_all_admin(user_id=data[1])
    for data in admin:
        text = f"–í–∞—à–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è\n\n"
        text += f"<i>üë§ –Ü–º—è:</i> <b>{data[2]}\n</b>"
        text += f"<i>üÜî ID:</i> <b>{data[1]}</b>"
        buttons = InlineKeyboardMarkup(row_width=1)

        buttons.insert(InlineKeyboardButton(text="‚ùå –í–∏–¥–∞–ª–µ–Ω–æ –∑ –ê–î–ú", callback_data=f"deladm:{data[1]}"))
        buttons.insert(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admins"))

        await call.message.edit_text(text=text, reply_markup=buttons)
#Dasturchi @Mrgayratov kanla @Kingsofpy
@dp.callback_query_handler(IsSuperAdmin(), text_contains="deladm:", state="*")
async def del_admin_method(call: types.CallbackQuery):
    await call.answer(cache_time=1)
    data = call.data.rsplit(":")
    print(data[1])
    delete_orders = db.delete_admin(admin_id=data[1])
    await bot.send_message(chat_id=data[1],
                           text="–í–∞–º –Ω–∞–¥–∞–Ω–æ –ø—Ä–∞–≤–∞ –ê–î–ú")
    # Dasturchi @Mrgayratov kanla @Kingsofpy
    await call.answer("üóë –ê–î–ú –≤–∏–º–∫–Ω–µ–Ω–æ !",show_alert=True)
    await call.message.edit_text("‚úÖ –ê–î–ú –≤–∏–¥–∞–ª–µ–Ω–æ!", reply_markup=main_menu_for_super_admin)
# ADMIN TAYORLASH VA CHIQARISH QISMI UCHUN

# MAJBURIY OBUNA SOZLASH UCHUN
@dp.callback_query_handler(text = "add_channel")
async def add_channel(call: types.CallbackQuery):
    await SuperAdminState.SUPER_ADMIN_ADD_CHANNEL.set()
    await call.message.edit_text(text="<i><b>üìõ –í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ ID –∫–∞–Ω–∞–ª—É: </b></i>")
    await call.message.edit_reply_markup(reply_markup=back_to_main_menu)


@dp.message_handler(state=SuperAdminState.SUPER_ADMIN_ADD_CHANNEL)
async def add_channel(message: types.Message, state: FSMContext):
    matn = message.text
    if matn.isdigit() or matn.startswith("@"):
        try:
            if db.check_channel(channel=message.text):
                await message.answer("<i>‚ùå–¶–µ–π –∫–∞–Ω–∞–ª –¥–æ–¥–∞–Ω–æ! –î–æ–¥–∞–π—Ç–µ —ñ–Ω—à–∏–π –∫–∞–Ω–∞–ª!</i>", reply_markup=back_to_main_menu)
            else:
                try:
                    deeellll = await bot.send_message(chat_id=message.text, text=".")
                    await bot.delete_message(chat_id=message.text, message_id=deeellll.message_id)
                    try:
                        db.add_channel(channel=message.text)
                    except:
                        pass
                    await message.answer("<i><b>–ö–∞–Ω–∞–ª —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ ‚úÖ</b></i>")
                    await message.answer("<i>–í–∏ –≤ –ø–∞–Ω–µ–ª—ñ –ê–î–ú. üßë‚Äçüíª</i>", reply_markup=main_menu_for_super_admin)
                    await state.finish()
                except:
                    await message.reply("""<i><b>
–Ø –Ω–µ –∞–¥–º—ñ–Ω —Ü—å–æ–≥–æ –∫–∞–Ω–∞–ª—É!‚öôÔ∏è
–ê–±–æ –∫–∞–Ω–∞–ª —ñ–∑ –≤–∫–∞–∑–∞–Ω–∏–º –≤–∞–º–∏ –ª–æ–≥—ñ–Ω–æ–º –Ω–µ —ñ—Å–Ω—É—î! ‚ùå
–ü–æ–≤—Ç–æ—Ä—ñ—Ç—å —Å–ø—Ä–æ–±—É —è–∫ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –∫–∞–Ω–∞–ª—É –∞–±–æ –≤–≤–µ–¥—ñ—Ç—å –¥—ñ–π—Å–Ω–µ —ñ–º‚Äô—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.üîÅ
                    </b></i>""", reply_markup=back_to_main_menu)
        except Exception as err:
            await message.answer(f"–ü–æ–º–∏–ª–∫–∞ –∑–Ω–∏–∫–ª–∞: {err}")
            await state.finish()
    else:
        await message.answer("–í–∏ –≤–≤–µ–ª–∏ –ø–æ–º–∏–ª–∫—É.", reply_markup=back_to_main_menu)

@dp.callback_query_handler(text="del_channel")
async def channel_list(call: types.CallbackQuery):
    royxat = db.select_channels()
    text = "üî∞ –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª—ñ–≤:\n\n"
    son = 0
    for o in royxat:
        son +=1
        text += f"{son}. {o[1]}\nüí† Username: {o[1]}\n\n"
    await call.message.edit_text(text=text)
    admins = db.select_all_channel()
    buttons = InlineKeyboardMarkup(row_width=2)
    for admin in admins:
        buttons.insert(InlineKeyboardButton(text=f"{admin[1]}", callback_data=f"delchanel:{admin[1]}"))

    buttons.add(InlineKeyboardButton(text="‚ûï –î–æ–¥–∞—Ç–∏ –∫–∞–Ω–∞–ª", callback_data="add_channel"))
    buttons.insert(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main_menu"))
    await call.message.edit_text(text=text, reply_markup=buttons)

@dp.callback_query_handler(IsSuperAdmin(), text_contains="delchanel:", state="*")
async def del_admin_method(call: types.CallbackQuery):
    await call.answer(cache_time=1)
    data = call.data.rsplit(":")
    print(data[1])
    delete_orders = db.delete_channel(channel=data[1])
    await call.answer("üóë –ö–∞–Ω–∞–ª –≤–∏–¥–∞–ª–µ–Ω–æ!",show_alert=True)
    await call.message.edit_text("‚úÖ –ö–∞–Ω–∞–ª —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ!", reply_markup=main_menu_for_super_admin)
# MAJBURIY OBUNA SOZLASH UCHUN

# ADMINLARNI KORISH
@dp.callback_query_handler(text="admins")
async def channel_list(call: types.CallbackQuery):
    royxat = db.select_admins()
    text = "üî∞ –°–ø–∏—Å–æ–∫ –ê–î–ú:\n\n"
    son = 0
    for o in royxat:
        son +=1
        text += f"{son}. {o[2]}\nID : {o[1]}üí† –Ü–º—è: {o[2]}\n\n"
    await call.message.edit_text(text=text)

    buttons = InlineKeyboardMarkup(row_width=1)
    buttons.insert(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main_menu"))
    await call.message.edit_text(text=text, reply_markup=buttons)
# ADMINLARNI KORISH

# –ü–ï–†–ï–ì–õ–Ø–ù–£–¢–ò –°–¢–ê–¢–ò–°–¢–ò–ö–£
@dp.callback_query_handler(text="statistics")
async def stat(call : types.CallbackQuery):
    stat = db.stat()
    for x in stat:
        dta = (x)
        datas = datetime.datetime.now()
        yil_oy_kun = (datetime.datetime.date(datetime.datetime.now()))
        soat_minut_sekund = f"{datas.hour}:{datas.minute}:{datas.second}"
        await call.message.delete()
        await call.message.answer(f"<b>üë• –ö–æ—Ä–∏—Å—Ç—É—é—Ç—å—Å—è: {(x)} –ü–î–ü\n</b>"
                                  f"<b>‚è∞ –ì–æ–¥–∏–Ω: {soat_minut_sekund}\n</b>"
                                  f"<b>üìÜ –î–∞—Ç–∞: {yil_oy_kun}</b>",reply_markup=types.InlineKeyboardMarkup().add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥",callback_data="back_to_main_menu")))
# STATISKA KORISH UCHUN

# ADMINGA SEND FUNC
@dp.callback_query_handler(IsSuperAdmin(), text="send_message_to_admins", state="*")
async def send_advertisement(call: types.CallbackQuery):
    await call.answer(cache_time=1)
    await call.message.edit_text("–ü–æ–¥–∞—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è...\n"
                                 "–∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å —Å–∫–∞—Å—É–≤–∞—Ç–∏", reply_markup=back_to_main_menu)
    await SuperAdminState.SUPER_ADMIN_SEND_MESSAGE_TO_ADMINS.set()


@dp.message_handler(IsSuperAdmin(), state=SuperAdminState.SUPER_ADMIN_SEND_MESSAGE_TO_ADMINS,
                    content_types=types.ContentTypes.ANY)
async def send_advertisement_to_user(message: types.Message,state: FSMContext):
    users =  db.stat_admins()
    for x in users:
        await message.answer(f"üì¢ –ü–æ—á–∞–ª–∞—Å—è —Ä–æ–∑—Å–∏–ª–∫–∞ —Ä–µ–∫–ª–∞–º–∏...\n"
                             f"üìä –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ê–î–ú: {x} ta\n"
                             f"üïí –ó–∞—á–µ–∫–∞–π—Ç–µ...\n")
        user = db.select_all_admins()
        for i in user:
            user_id= i[1]
            try:
                await bot.copy_message(chat_id=user_id, from_chat_id=message.chat.id,
                                       message_id=message.message_id, caption=message.caption,
                                       reply_markup=message.reply_markup, parse_mode=types.ParseMode.MARKDOWN)

                time.sleep(0.5)
            except Exception as e:
                print(e)


        await message.answer("‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ!", reply_markup=main_menu_for_super_admin)
        await state.finish()
# ADMINGA SEND FUNC

# Foydalanuvchilar SEND FUNC
@dp.callback_query_handler(IsSuperAdmin(), text="send_advertisement", state="*")
async def send_advertisement(call: types.CallbackQuery):
    await call.answer(cache_time=1)
    await call.message.edit_text("–ü–æ–¥–∞—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è...\n"
                                 "–∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å —Å–∫–∞—Å—É–≤–∞—Ç–∏", reply_markup=back_to_main_menu)
    await SuperAdminState.SUPER_ADMIN_STATE_GET_ADVERTISEMENT.set()


@dp.message_handler(IsSuperAdmin(), state=SuperAdminState.SUPER_ADMIN_STATE_GET_ADVERTISEMENT,
                    content_types=types.ContentTypes.ANY)
async def send_advertisement_to_user(message: types.Message,state: FSMContext):
    users =  db.stat()
    for x in users:
        await message.answer(f"üì¢ –ü–æ—á–∞–ª–∞—Å—è —Ä–æ–∑—Å–∏–ª–∫–∞ —Ä–µ–∫–ª–∞–º–∏...\n"
                             f"üìä –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ü–î–ü: {x} ta\n"
                             f"üïí –ó–∞—á–µ–∫–∞–π—Ç–µ...\n")
        user = db.select_all_users()
        for i in user:
            user_id= i[1]
            try:
                await bot.copy_message(chat_id=user_id, from_chat_id=message.chat.id,
                                       message_id=message.message_id, caption=message.caption,
                                       reply_markup=message.reply_markup, parse_mode=types.ParseMode.MARKDOWN)

                time.sleep(0.5)
            except Exception as e:
                print(e)


        await message.answer("‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ!", reply_markup=main_menu_for_super_admin)
        await state.finish()
# Foydalanuvchilar SEND FUNC


@dp.callback_query_handler(IsSuperAdmin(), text="back_to_main_menu", state="*")
async def back_to_main_menu_method(call: types.CallbackQuery,state: FSMContext):
    await call.answer(cache_time=1)
    await call.message.edit_text(text="üë®‚Äçüíª –ú–µ–Ω—é", reply_markup=main_menu_for_super_admin)
    await state.finish()

